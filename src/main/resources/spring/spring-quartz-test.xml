<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="taskDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${task_jdbc.driver}"/>
        <property name="url" value="${task_jdbc_url}"/>
        <property name="username" value="${task_jdbc_username}"/>
        <property name="password" value="${task_jdbc_password}"/>
    </bean>

    <!--   调度quartz的工厂    -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="taskDataSource"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true"/>
        <!--    指定数据库中 sched_name    -->
        <property name="schedulerName" value="testQuartz"/>
        <!--    项目启动后，等待30秒后再执行    -->
        <property name="startupDelay" value="30"/>
        <!-- 设置自动启动 -->
        <property name="autoStartup" value="true"/>
        <!-- 注册触发器 -->
        <property name="triggers">
            <list>
                <ref bean="testQuartzWorkJobDetailTrigger"/>
                <ref bean="testQuartzDoSomeWorkJobDetailTrigger"/>
            </list>
        </property>
    </bean>

    <import resource="classpath:spring/spring-quartz-cronTrigger.xml"/>

</beans>